# Extend the base Windows-native image
FROM africanfuture/windows-devbox-base:latest

# Set PowerShell as default shell
SHELL ["powershell", "-Command"]

# Check disk space before installation
RUN Write-Host "Checking disk space..."; \
    $freeSpace = (Get-PSDrive C).Free / 1GB; \
    Write-Host "Free space on C: $freeSpace GB"; \
    if ($freeSpace -lt 25) { Write-Error "Insufficient disk space on C: drive (<25GB)"; exit 1 }

# Download Visual Studio Build Tools
RUN Write-Host "Downloading Visual Studio Build Tools..."; \
    try { \
        Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_BuildTools.exe" -OutFile "C:\vs_BuildTools.exe" -UseBasicParsing -ErrorAction Stop; \
    } catch { \
        Write-Error $_.Exception.Message; \
        exit 1 \
    }

# Install Visual Studio Build Tools
RUN Write-Host "Installing Visual Studio Build Tools..."; \
    $process = Start-Process -FilePath "C:\vs_BuildTools.exe" -ArgumentList @( \
        '--quiet', \
        '--wait', \
        '--norestart', \
        '--nocache', \
        '--installPath', 'C:\BuildTools', \
        '--add', 'Microsoft.VisualStudio.Workload.VCTools', \
        '--add', 'Microsoft.VisualStudio.Workload.ManagedDesktopBuildTools', \
        '--add', 'Microsoft.VisualStudio.Workload.NetCoreBuildTools', \
        '--includeRecommended' \
    ) -Wait -PassThru; \
    if ($process.ExitCode -ne 0) { \
        Write-Host "##[error]Visual Studio Build Tools installation failed with exit code $($process.ExitCode)."; \
        $logPath = "$env:TEMP\dd_setup*.log"; \
        $logs = Get-Item -Path $logPath -ErrorAction SilentlyContinue; \
        if ($logs) { \
            Write-Host "Installer logs found at $($logs.FullName):"; \
            Get-Content -Path $logs.FullName | Write-Host; \
        } else { \
            Write-Host "##[warning]Could not find Visual Studio installer logs at '$logPath'."; \
        } \
        exit $process.ExitCode; \
    }; \
    Remove-Item "C:\vs_BuildTools.exe" -Force -ErrorAction SilentlyContinue; \
    # Clean up installer cache to reduce image size
    Remove-Item "C:\Program Files (x86)\Microsoft Visual Studio\Installer" -Recurse -Force -ErrorAction SilentlyContinue; \
    Remove-Item "C:\ProgramData\Microsoft\VisualStudio" -Recurse -Force -ErrorAction SilentlyContinue

# Install Windows SDK 10.1
RUN Write-Host "Installing Windows SDK 10.1..."; \
    try { \
        choco install -y --no-progress --timeout 7200 windows-sdk-10.1; \
        if ($LASTEXITCODE -ne 0) { Get-Content C:\ProgramData\chocolatey\logs\chocolatey.log; Get-Content C:\Users\ContainerAdministrator\AppData\Local\Temp\chocolatey\windows-sdk-10.1.log -ErrorAction SilentlyContinue; throw "Windows SDK 10.1 installation failed with exit code $LASTEXITCODE" }; \
    } catch { \
        Write-Error $_.Exception.Message; \
        exit 1 \
    }

# Add WinDbg to PATH (installed with Windows SDK)
ENV PATH="C:\Program Files (x86)\Windows Kits\10\Debuggers\x64;C:\Program Files (x86)\Windows Kits\10\Debuggers\x86;${env:PATH}"

# Verify working directory
WORKDIR C:/dev

# Default to PowerShell
CMD ["powershell", "-NoExit", "-Command", "$PSVersionTable"]