# Extend the base Windows-native image
FROM africanfuture/windows-devbox-base:latest

# Set PowerShell as default shell
SHELL ["powershell", "-Command"]

# Check disk space before installation
RUN Write-Host "Checking disk space..."; \
    $freeSpace = (Get-PSDrive C).Free / 1GB; \
    Write-Host "Free space on C: $freeSpace GB"; \
    if ($freeSpace -lt 25) { Write-Error "Insufficient disk space on C: drive (<25GB)"; exit 1 }

# Download Visual Studio Build Tools
RUN Write-Host "Downloading Visual Studio Build Tools..."; \
    try { \
        Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_BuildTools.exe" -OutFile "C:\vs_BuildTools.exe" -UseBasicParsing -ErrorAction Stop; \
    } catch { \
        Write-Error $_.Exception.Message; \
        exit 1 \
    }

# Install Visual Studio Build Tools by copying and running a dedicated script
COPY install-vs.ps1 C:/temp/install-vs.ps1
RUN powershell.exe -ExecutionPolicy Bypass -File C:/temp/install-vs.ps1; \
    Remove-Item C:/temp/install-vs.ps1 -Force

# Install Windows SDK 10.1 with improved error handling
RUN Write-Host "Installing Windows SDK 10.1..."; \
    choco install -y --no-progress --timeout 7200 windows-sdk-10.1; \
    if ($LASTEXITCODE -ne 0) { \
        Write-Host "##[error]Windows SDK 10.1 installation failed with exit code $LASTEXITCODE."; \
        Write-Host "Displaying Chocolatey log:"; \
        Get-Content C:\ProgramData\chocolatey\logs\chocolatey.log -ErrorAction SilentlyContinue | Write-Host; \
        exit $LASTEXITCODE; \
    }

# Add WinDbg to PATH (installed with Windows SDK)
ENV PATH="C:\Program Files (x86)\Windows Kits\10\Debuggers\x64;C:\Program Files (x86)\Windows Kits\10\Debuggers\x86;${PATH}"

# Verify working directory
WORKDIR C:/dev

# Default to PowerShell
CMD ["powershell", "-NoExit", "-Command", "$PSVersionTable"]